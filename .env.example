#:| Enter a **random**, **unique** and **private** secret key.
#:| Pytition won't start without it.
#:| Never share it, don't commit in git.
#:| See https://docs.djangoproject.com/en/2.2/ref/settings/#std:setting-SECRET_KEY for more details from Django documentation
#:| To generate it, you can use the following command from your virtualenv with Django installed:
#:| ``$ python3 -c "from django.core.management.utils import get_random_secret_key as g; print(g())"``
#:
#: Example::
#:
#:   SECRET_KEY='my secret key here'
#:
SECRET_KEY=""

#:| Configure the database here
# Use this for a Postgres DB
# DATABASE_URL="postgres://pytition:PASSWORD@127.0.0.1/pytition"
# Use this for a MySQL DB
# DATABASE_URL="mysql://pytition:PASSWORD@127.0.0.1/pytition"
DATABASE_URL=""

#:| Set this to ``true`` if you want to allow users to register
ALLOW_REGISTER=false

#:| Set it to ``true`` if you want email sending to retry upon failure.
#:| Email transmition naturally have retries *if the first SMTP server accepts it*
#:| If your SMTP server refuses to handle the email (anti-flood throttle?) then it
#:| is up to you to retry, and this is what the mail queue does for you.
#:| This is especially needed if you don't own the first-hop SMTP server
#:| and cannot configure it to always accept your emails regardless of the sending
#:| frequency.
#:| It is **HIGHLY** recommended to set this to ``True``.
#:| If you chose to use the mail queue, you must also either
#:
#: * set a cron job (automatic task execution), or
#: * serve the Django app through uwsgi (recommended setup)
#:
#: .. warning:: The first time you switch this setting from ``False`` to ``True``, you must run the ``DJANGO_SETTINGS_MODULE=pytition.settings.config python3 pytition/manage.py migrate`` command again. Beware to run it while being in your virtualenv.
USE_MAIL_QUEUE=false

#:| If set to True, users won't be able to create petitions in their name, but only for an organization
DISABLE_USER_PETITION=false

#:| If set to True, regular users won't be able to create new organizations.
RESTRICT_ORG_CREATION=false

#:| Enter the hostname(s) (aka VirtualHost(s)) Django should accept.
#:| For instance mydomain.tld or petition.mydomain.tld.
#:| Use commas to separate multiple sites
# SITES=pytition1.example.org,pytition2.example.org

#:| Default address for 'Reply to' field in mail sent on account creation
DEFAULT_NOREPLY_MAIL=

#:| Enter the site name you want to appear in the navbar.
# SITE_NAME=""

#:| Set default region to France with regard to accepting phone numbers without international prefix.
#:| The +33 prefix for France is therefore optional, but it might be mandatory to add a prefix for
#:| other countries. This does not change anything for translations.
PHONENUMBER_DEFAULT_REGION="FR"

#:| Leave it set to None for no footer.
#:| This should contain the relative path to your footer template.
#:| That would be the location for any "legal mention" / "GDPR" / "TOS" link.
#:
#: Example::
#:
#:   FOOTER_TEMPLATE = 'layouts/footer.html.example'
# FOOTER_TEMPLATE=

# DEFAULT_INDEX_THUMBNAIL="/img/petition_icon.svg"

#:| Enter the file system path to the directory that will be used to serve your static files.
#:| This must be an initially empty directory.
#:| You must also configure a web server (apache, nginx or other) to serve
#:| the content of this directory according to your *STATIC_URL* setting
#:| which default is ``'/static/'`` in the example config.
#:
#: For instance you can have this kind of setting::
#:
#:   STATIC_ROOT='/home/pytition/www/static'
#:   STATIC_URL='/static/'
#:
#: And then in your apache config::
#:
#:   Alias /static /home/pytition/www/static
#:
#: Or in your nginx config::
#:
#:   location /static {
#:       alias /home/pytition/www/static;
#:   }
#:
#: .. seealso:: https://docs.djangoproject.com/en/2.2/ref/settings/#std:setting-STATIC_ROOT for more details from Django Documentation
#:
# STATIC_ROOT=''

#:| enter the prefix that will be used for the url to refer to static files.
#:| it must end with a forward slash '/'.
#:| you must also configure a web server (apache, nginx or other) to serve
#:| the content of the directory configured as STATIC_ROOT according to this setting
#:| it defaults to ``'/static/'`` in the example config.
#:
#: for instance you can have this kind of setting::
#:
#:   STATIC_ROOT='/home/pytition/www/static'
#:   STATIC_URL='/static/'
#:
#: and then in your apache config::
#:
#:   alias /static /home/pytition/www/static
#:
#: or in your nginx config::
#:
#:   location /static {
#:       alias /home/pytition/www/static;
#:   }
#:
#: .. seealso:: https://docs.djangoproject.com/en/2.2/ref/settings/#std:setting-static_url for more details from django documentation
#:
# STATIC_URL=""

#:| enter the prefix that will be used for the url to refer to uploaded files.
#:| it must end with a forward slash '/'.
#:| you must also configure a web server (apache, nginx or other) to serve
#:| the content of the directory configured as MEDIA_ROOT according to this setting
#:| it defaults to ``'/mediaroot/'`` in the example config.
#:
#: for instance you can have this kind of setting::
#:
#:   MEDIA_ROOT='/home/pytition/www/mediaroot'
#:   MEDIA_URL='/mediaroot/'
#:
#: and then in your apache config::
#:
#:   alias /mediaroot /home/pytition/www/mediaroot
#:
#: or in your nginx config::
#:
#:   location /mediaroot {
#:       alias /home/pytition/www/mediaroot;
#:   }
#:
#: .. seealso:: https://docs.djangoproject.com/en/2.2/ref/settings/#std:setting-MEDIA_URL for more details from django documentation
#:
# MEDIA_URL=''

#:| Enter the file system path to the directory that will be used to serve user uploaded files.
#:| This must be an initially empty directory.
#:| You must also configure a web server (apache, nginx or other) to serve
#:| the content of this directory according to your *MEDIA_URL* setting
#:| which default is ``'/mediaroot/'`` in the example config.
#:
#: For instance you can have this kind of setting::
#:
#:   MEDIA_ROOT='/home/pytition/www/mediaroot'
#:   MEDIA_URL='/mediaroot/'
#:
#: And then in your apache config::
#:
#:   Alias /mediaroot /home/pytition/www/mediaroot
#:
#: Or in your nginx config::
#:
#:   location /mediaroot {
#:       alias /home/pytition/www/mediaroot;
#:   }
#:
#: .. seealso:: https://docs.djangoproject.com/en/2.2/ref/settings/#std:setting-MEDIA_ROOT for more details from Django Documentation
#:
# MEDIA_ROOT=''
